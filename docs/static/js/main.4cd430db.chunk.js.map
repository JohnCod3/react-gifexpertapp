{"version":3,"sources":["components/CategoryAdd.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","categories","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"6MAmCeA,EAhCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACNC,mBAAS,IADH,mBACnCC,EADmC,KACvBC,EADuB,KAgB1C,OACC,0BAAMC,SAVc,SAAAC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAS,IACvBP,GAAc,SAAAQ,GAAU,OAAKN,GAAL,mBAAoBM,OAC5CL,EAAc,OAMd,2BACCM,KAAK,OACLC,YAAY,GACZC,MAAOT,EACPU,SAnBuB,SAAAP,GACzBF,EAAcE,EAAEQ,OAAOF,Y,uBCJZG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACfC,EADe,UAFR,uCAEQ,cACMC,UAAUH,GADhB,6BAHR,oCAGQ,SAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAG,YAAK,CAC5BC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARf,kBAWdM,GAXc,4CAAH,sDCQLO,EATK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC7B,OACC,yBAAKc,UAAU,0CACd,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCoBQO,EArBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFN,SAAAA,GAAa,IAAD,EACZd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH2B,mBAC/BC,EAD+B,KACxBC,EADwB,KAetC,OATAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAAAC,GACrBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGZ,CAACpB,IAEGqB,EDZ0BK,CAAa1B,GAAjCa,EADmB,EACzBN,KAAca,EADW,EACXA,QAEtB,OACC,oCACC,wBAAIJ,UAAU,qCAAqChB,GAElDoB,GAAW,uBAAGJ,UAAU,oCAAb,eAEZ,yBAAKA,UAAU,aACbH,EAAOJ,KAAI,SAAAC,GAAG,OACd,kBAAC,EAAD,eACCiB,IAAKjB,EAAIC,IACLD,UEOKkB,EApBM,WAAO,IAAD,EACU1C,mBAAS,CAAC,gBADpB,mBACnBO,EADmB,KACPR,EADO,KAG1B,OACC,oCACC,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BACEQ,EAAWgB,KAAI,SAAAT,GAAQ,OACvB,kBAAC,EAAD,CACC2B,IAAK3B,EACLA,SAAUA,UCXhB6B,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.4cd430db.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst CategoryAdd = ({ setCategories }) => {\n\tconst [inputValue, setInputValue] = useState('');\n\n\tconst handleInputChange = e => {\n\t\tsetInputValue(e.target.value);\n\t};\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tif (inputValue.length > 2) {\n\t\t\tsetCategories(categories => [inputValue, ...categories]);\n\t\t\tsetInputValue('');\n\t\t}\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"\"\n\t\t\t\tvalue={inputValue}\n\t\t\t\tonChange={handleInputChange}\n\t\t\t/>\n\t\t</form>\n\t);\n};\n\nCategoryAdd.propTypes = {\n\tsetCategories: PropTypes.func.isRequired\n};\n\nexport default CategoryAdd;","const apiKey = 'uCAwa6J1deM6ERtP5wgSR7zFP3hsbSpm';\nconst apiUrl = 'https://api.giphy.com/v1/gifs/search';\n\nexport const getGifs = async category => {\n  const url = `${apiUrl}?q=${encodeURI(category)}&limit=10&api_key=${apiKey}`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifs = data.map(img => ({\n    id: img.id,\n    title: img.title,\n    url: img.images?.downsized_medium.url\n  }));\n\n  return gifs;\n};\n","import React from 'react';\n\nconst GifGridItem = ({ title, url }) => {\n\treturn (\n\t\t<div className=\"card animate__animated animate__fadeIn\">\n\t\t\t<img src={url} alt={title} />\n\t\t\t<p>{title}</p>\n\t\t</div>\n\t);\n};\n\nexport default GifGridItem;","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({ category }) => {\n\tconst { data: images, loading } = useFetchGifs(category);\n\n\treturn (\n\t\t<>\n\t\t\t<h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\n\t\t\t{loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\n\n\t\t\t<div className=\"card-grid\">\n\t\t\t\t{images.map(img => (\n\t\t\t\t\t<GifGridItem\n\t\t\t\t\t\tkey={img.id}\n\t\t\t\t\t\t{...img}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default GifGrid;","import { useEffect, useState } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = category => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n\n  useEffect(() => {\n    getGifs(category).then(imgs => {\n      setState({\n        data: imgs,\n        loading: false\n      });\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from 'react';\n\nimport CategoryAdd from './components/CategoryAdd';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\tconst [categories, setCategories] = useState(['Dragon Ball']);\n\n\treturn (\n\t\t<>\n\t\t\t<h2>GifExpertApp</h2>\n\t\t\t<CategoryAdd setCategories={setCategories} />\n\t\t\t<hr />\n\t\t\t<ol>\n\t\t\t\t{categories.map(category => (\n\t\t\t\t\t<GifGrid\n\t\t\t\t\t\tkey={category}\n\t\t\t\t\t\tcategory={category}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ol>\n\t\t</>\n\t);\n};\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}